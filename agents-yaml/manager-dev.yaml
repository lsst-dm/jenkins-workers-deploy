apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: manager-dev
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: manager-dev
  template:
    metadata:
      labels:
        app: manager-dev
    spec:
      containers:
      - env:
        - name: JAVA_ARGS
          value: "-javaagent:/usr/share/jenkins/jmx_prometheus_javaagent-0.11.0.jar=localhost:8080:/usr/share/jenkins/jmx_exporter.yaml"
        - name: JSWARM_URL
          value: https://rubin-ci-dev.slac.stanford.edu/
#        - name: JSWARM_OTHER_ARGS
#          value: -webSocket
        - name: JSWARM_TUNNEL
          value: 134.79.23.201:20000
        - name: JSWARM_MODE
          value: normal
        - name: JSWARM_LABELS
          value: jenkins-manager
        - name: JSWARM_EXECUTORS
          value: "1"
        - name: JSWARM_AGENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: JSWARM_DISABLE_CLIENTS_UNIQUE_ID
          value: "true"
        - name: JSWARM_DELETE_EXISTING_CLIENTS
          value: "true"
        - name: JSWARM_USERNAME
          valueFrom:
            secretKeyRef:
              key: JSWARM_USERNAME
              name: agent-ldfc
        - name: JSWARM_PASSWORD
          valueFrom:
            secretKeyRef:
              key: JSWARM_PASSWORD
              name: agent-ldfc
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: K8S_SWARM_REQUESTS_CPU
          valueFrom:
            resourceFieldRef:
              containerName: swarm
              divisor: "0"
              resource: requests.cpu
        - name: K8S_SWARM_LIMITS_CPU
          valueFrom:
            resourceFieldRef:
              containerName: swarm
              divisor: "0"
              resource: limits.cpu
        - name: K8S_SWARM_REQUESTS_MEMORY_GI
          valueFrom:
            resourceFieldRef:
              containerName: swarm
              divisor: 1Gi
              resource: requests.memory
        - name: K8S_SWARM_LIMITS_MEMORY_GI
          valueFrom:
            resourceFieldRef:
              containerName: swarm
              divisor: 1Gi
              resource: limits.memory
        image: ghcr.io/lsst-dm/jenkins-swarm-client:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - wget
            - --spider
            - -q
            - http://127.0.0.1:8080/metrics
          failureThreshold: 2
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: swarm
        readinessProbe:
          exec:
            command:
            - wget
            - --spider
            - -q
            - http://127.0.0.1:8080/metrics
          failureThreshold: 2
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: true
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 202
          runAsNonRoot: false
          runAsUser: 48435
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /j
          name: ws-manager-dev
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 4085
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: docker-graph-storage
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: ws-manager-dev
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "1500Gi"
      volumeMode: Filesystem
